{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","props/FormInputProps.js","components/FormInput/FormInput.js","props/NewMovieProps.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","FormInputProps","name","PropTypes","string","isRequired","value","handleChange","func","handleBlur","textError","FormInput","React","memo","toUpperCase","slice","placeholder","classNames","onChange","onBlur","aria-describedby","autoComplete","id","propTypes","regex","NEW_MOVIE","MOVIE_ERRORS","Object","keys","filter","fild","reduce","errors","NewMovie","state","values","event","target","setState","handleSubmit","preventDefault","props","addMovie","prototype","hasOwnProperty","call","includes","test","isDisabledButton","hasErrors","some","err","this","onSubmit","type","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b6f1198.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import PropTypes from 'prop-types';\n\nexport const FormInputProps = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  textError: PropTypes.string,\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { FormInputProps } from '../../props/FormInputProps';\n\nexport const FormInput = React.memo(({\n  name,\n  value,\n  handleChange,\n  handleBlur,\n  textError,\n}) => (\n  <div>\n    <label className=\"form-group row\">\n      {name[0].toUpperCase() + name.slice(1)}\n      <input\n        name={name}\n        placeholder={`Enter ${name}`}\n        className={classNames('form-control', {\n          'is-invalid': textError,\n        })}\n        value={value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        aria-describedby=\"validationFeedback\"\n        autoComplete=\"off\"\n      />\n      <div id=\"validationFeedback\" className=\"invalid-feedback\">\n        {textError}\n      </div>\n    </label>\n  </div>\n));\n\nFormInput.propTypes = FormInputProps;\n\nFormInput.defaultProps = {\n  value: '',\n  textError: null,\n};\n","import PropTypes from 'prop-types';\n\nexport const NewMovieProps = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { FormInput } from '../FormInput';\nimport { NewMovieProps } from '../../props/NewMovieProps';\n\n// eslint-disable-next-line max-len\nconst regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nconst NEW_MOVIE = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nconst MOVIE_ERRORS = Object.keys(NEW_MOVIE)\n  .filter(fild => fild === 'title'\n    || fild === 'imgUrl'\n    || fild === 'imdbUrl'\n    || fild === 'imdbId')\n  .reduce((errors, movie) => ({\n    ...errors,\n    [movie]: null,\n  }), {});\n\nexport class NewMovie extends Component {\n  state = {\n    values: NEW_MOVIE,\n    errors: MOVIE_ERRORS,\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState(state => ({\n      values: {\n        ...state.values,\n        [name]: value,\n      },\n    }));\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.addMovie(this.state.values);\n\n    this.setState({\n      values: NEW_MOVIE,\n    });\n  }\n\n  handleBlur = (event) => {\n    const { name, value } = event.target;\n    const { errors } = this.state;\n    const isControled = Object\n      .prototype\n      .hasOwnProperty\n      .call(errors, name);\n\n    if (!isControled) {\n      return;\n    }\n\n    this.setState(state => ({\n      errors: {\n        ...state.errors,\n        [name]: value ? null : `The ${name} is required`,\n      },\n    }));\n\n    if (value && name.includes('Url')) {\n      this.setState(state => ({\n        errors: {\n          ...state.errors,\n          [name]: regex.test(value) ? null : 'Please enter a valid url',\n        },\n      }));\n    }\n  }\n\n  isDisabledButton = () => {\n    const { title, imgUrl, imdbUrl, imdbId } = this.state.values;\n    const hasErrors = Object.values(this.state.errors).some(err => err);\n\n    return !imdbId\n      || !imdbUrl\n      || !imgUrl\n      || !title\n      || hasErrors;\n  }\n\n  render() {\n    const {\n      errors,\n      values,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h3 className=\"form-group row\">Add film</h3>\n\n        {Object.keys(values).map(fild => (\n          <FormInput\n            key={fild}\n            name={fild}\n            value={values[fild]}\n            handleChange={this.handleChange}\n            handleBlur={this.handleBlur}\n            textError={errors[fild]}\n          />\n        ))}\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary form-group row\"\n          disabled={this.isDisabledButton()}\n        >\n          Add film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = NewMovieProps;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}